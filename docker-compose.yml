version: '3.7'
services:
  mq:
    image: rabbitmq:3-alpine
    ports:
      - "127.0.0.1:5672:5672"
    env_file:
      - frontend/.env
  geodb:
    image: tms/db:1
    build:
      context: db/
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - type: bind
        source: ./geodata
        target: /var/lib/postgresql/data
    env_file:
      - frontend/.env
    environment:
      - POSTGRES_DB=osm
      - POSTGRES_USER=tms
      - POSTGRES_PASSWORD=tms
  db:
    image: postgres:12.2-alpine
    volumes:
      - type: bind
        source: ./data
        target: /var/lib/postgresql/data
    ports:
      - "127.0.0.1:5433:5432"
    env_file:
      - frontend/.env
    environment:
      - POSTGRES_DB=tms_frontend_dev
      - POSTGRES_USER=tms
      - POSTGRES_PASSWORD=tms
  mapnik:
    image: tms/mapnik:1
    build:
      context: mapnik/
      dockerfile: Dockerfile
    depends_on:
      - geodb
      - mq
    volumes:
      - type: bind
        source: ./exchange
        target: /input
    command: node ./app.ts
    ports:
      - "127.0.0.1:5000:5000"
    env_file:
      - frontend/.env
  frontend:
    build:
      context: frontend/
    image: "tms/frontend:latest"
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "127.0.0.1:8000:8000"
    depends_on:
      - mq
      - db
      - mapnik
    volumes:
      - type: bind
        source: ./files
        target: /home/pyuser/files
