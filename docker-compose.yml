name: tms

services:
  mq:
    image: docker.io/rabbitmq:3-alpine
    ports:
      - "127.0.0.1:5672:5672"
    env_file:
      - frontend/.env
  geodb:
    image: localhost/tms/db:1
    build:
      context: db/
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - type: bind
        source: ./geodata
        target: /var/lib/postgresql/data
    environment:
      - POSTGRES_DB=osm
      - POSTGRES_USER=tms
      - POSTGRES_PASSWORD=tms
  redis:
    image: "docker.io/redis:7-alpine"
    ports:
      - "127.0.0.1:6379:6379"
  db:
    image: docker.io/postgres:17-alpine
    volumes:
      - type: bind
        source: ./data
        target: /var/lib/postgresql/data
    ports:
      - "127.0.0.1:5433:5432"
    environment:
      - POSTGRES_DB=tms_frontend_dev
      - POSTGRES_USER=tms
      - POSTGRES_PASSWORD=tms
  python-base:
    image: localhost/tms/python-base:slim
    build:
      context: shapefiles/
      dockerfile: Dockerfile.python-base
  mapnik:
    image: localhost/tms/mapnik:1
    build:
      context: mapnik/
      dockerfile: Dockerfile
    depends_on:
      - geodb
      - mq
      - python-base
    volumes:
      - type: bind
        source: ./exchange
        target: /input
    command: node --max-old-space-size=4096 ./app.js
    ports:
      - "127.0.0.1:5000:5000"
    env_file:
      - frontend/.env
  frontend:
    build:
      context: frontend/
    image: "localhost/tms/frontend:latest"
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "127.0.0.1:8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=TerritoriumMapServerFrontend.settings
    depends_on:
      - mq
      - db
      - mapnik
    volumes:
      - type: bind
        source: ./files
        target: /home/pyuser/files
      - type: bind
        source: ./exchange
        target: /input
