version: '3.7'
services:
  mapnik:
    image: tms/mapnik:1
    build:
      context: mapnik/
      dockerfile: Dockerfile
    networks:
      - tms-net
    depends_on:
      - geodb
      - mq
    volumes:
      - type: bind
        source: ./exchange
        target: /input
    ports:
      - "127.0.0.1:5000:5000"
    environment:
      - DBNAME=osm
      - PGHOST=geodb
      - PGPORT=5432
      - PGUSER=tms
      - PGPASSWORD=tms
      - RABBITMQ_HOST=mq
  mq:
    image: rabbitmq:3-alpine
    networks:
      - tms-net
    ports:
      - "5672:5672"
  geodb:
    image: tms/db:1
    build:
      context: db/
      dockerfile: Dockerfile
    networks:
      - tms-net
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - type: bind
        source: ./geodata
        target: /var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=tms
      - POSTGRES_USER=tms
      - POSTGRES_DB=osm
      - PG_WORK_MEM
      - PG_MAINTENANCE_WORK_MEM
  db:
    image: postgres:12.2-alpine
    networks:
      - tms-net
    volumes:
      - type: bind
        source: ./data
        target: /var/lib/postgresql/data
    environment:
      - POSTGRES_USER=tms
      - POSTGRES_PASSWORD=tms
      - POSTGRES_DB=tms_frontend_dev
  frontend:
    build:
      context: frontend/
    image: "tms/frontend:latest"
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    networks:
      - tms-net
    depends_on:
      - mq
      - db
    volumes:
      - type: bind
        source: ./files
        target: /home/pyuser/files

networks:
  tms-net:
    name: "tms-net"
    driver:  bridge
